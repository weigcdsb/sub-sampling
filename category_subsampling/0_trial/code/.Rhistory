nBeta <- dim(X)[2]
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply(unif.beta.boot, MARGIN = 1,
FUN = function(beta){
res <- unif.y - unif.X %*% as.vector(beta)
return(sum(res^2)/(length(unif.y)-length(beta)))
}))
}
S <- 1000
r0 <- 200
r <- c(100, 200, 300, 500, 700, 1000)
X <- X1
n <- dim(X)[1]
nBeta <- dim(X)[2]
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply(unif.beta.boot, MARGIN = 1,
FUN = function(beta){
res <- unif.y - unif.X %*% as.vector(beta)
return(sum(res^2)/(length(unif.y)-length(beta)))
}))
}
weighted.MLE <- function(X, y, ssp, maxIter = 1000){
beta <- rep(0, ncol(X))
update <- Inf
iter <- 0
while((sum(update^2) > 1e-6)& (iter < maxIter)){
eta <- X %*% beta
prob <- c(exp(eta)/(1 + exp(eta)))
OP <- t(X) %*% (prob * (1 - prob)* X/ ssp)
update <- solve(OP) %*% apply((y - prob)* X/ ssp, 2, sum)
beta <- beta + update
iter <- iter + 1
}
if(iter < maxIter){
return(beta)
}else{
print('Not Converge')
return()
}
}
pilot <- function(X, y, r0){
n1 <- sum(y)
n0 <- n - n1
pilot.ssp <- rep(1/(2*n0), n)
pilot.ssp[y==1] <- 1/(2*n1)
pilot.idx <- sample(1:n, r0, replace = T, prob = pilot.ssp)
pilot.y <- y[pilot.idx]
pilot.X <- X[pilot.idx, ]
pilot.ssp.star <- pilot.ssp[pilot.idx]
return(list(beta = weighted.MLE(pilot.X, pilot.y, pilot.ssp.star),
ssp = pilot.ssp.star,
idx = pilot.idx,
X = pilot.X, y = pilot.y))
}
unif.mse <- rep(NA, length(r))
i
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
j
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
unif.X
t(weighted.MLE(unif.X, unif.y, unif.ssp))
set.seed(123)
n <- 10000
nBeta <- 7
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 0.5
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
S <- 1000
r0 <- 200
r <- c(100, 200, 300, 500, 700, 1000)
X <- X1
n <- dim(X)[1]
nBeta <- dim(X)[2]
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply(unif.beta.boot, MARGIN = 1,
FUN = function(beta){
res <- unif.y - unif.X %*% as.vector(beta)
return(sum(res^2)/(length(unif.y)-length(beta)))
}))
}
unif1 <- unif.mse
unif1
S <- 1000
r0 <- 200
r <- c(100, 200, 300, 500, 700, 1000)
X <- X2
n <- dim(X)[1]
nBeta <- dim(X)[2]
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply(unif.beta.boot, MARGIN = 1,
FUN = function(beta){
res <- unif.y - unif.X %*% as.vector(beta)
return(sum(res^2)/(length(unif.y)-length(beta)))
}))
}
unif2 <- unif.mse
plot(unif1)
lines(unif2)
unif1
matrix(rep(beta.mle, S),nrow = S, byrow = T)
n <- dim(X)[1]
nBeta <- dim(X)[2]
beta.mle <- glm(y ~ X - 1,
family = binomial(link = 'logit'))$coefficients
matrix(rep(beta.mle, S),nrow = S, byrow = T)
dim(matrix(rep(beta.mle, S),nrow = S, byrow = T))
dim((unif.beta.boot -
matrix(rep(beta.mle, S),nrow = S, byrow = T))
)
dim(X)
S
dim(X %*% t(unif.beta.boot -
matrix(rep(beta.mle, S),nrow = S, byrow = T)))
apply((X %*% t(unif.beta.boot -
matrix(rep(beta.mle, S),nrow = S, byrow = T)))^2,
2, sum)
S <- 1000
r0 <- 200
r <- c(100, 200, 300, 500, 700, 1000)
X <- X1
n <- dim(X)[1]
nBeta <- dim(X)[2]
n <- dim(X)[1]
nBeta <- dim(X)[2]
beta.mle <- glm(y ~ X - 1,
family = binomial(link = 'logit'))$coefficients
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply((X %*% t(unif.beta.boot -
matrix(rep(beta.mle, S),
nrow = S, byrow = T)))^2,
2, sum))
}
unif1 <- unif.mse
S <- 1000
r0 <- 200
r <- c(100, 200, 300, 500, 700, 1000)
X <- X2
n <- dim(X)[1]
nBeta <- dim(X)[2]
n <- dim(X)[1]
nBeta <- dim(X)[2]
beta.mle <- glm(y ~ X - 1,
family = binomial(link = 'logit'))$coefficients
unif.mse <- rep(NA, length(r))
for(i in 1:length(r)){
unif.r.total <- r[i] + r0
unif.beta.boot <- matrix(NA, nrow = S, ncol = nBeta)
for(j in 1:S){
unif.idx <- sample(1:n, unif.r.total, replace = T)
unif.y <- y[unif.idx]
unif.X <- X[unif.idx, ]
unif.ssp <- 1/n
unif.beta.boot[j, ] <- t(weighted.MLE(unif.X, unif.y, unif.ssp))
}
unif.mse[i] <- mean(apply((X %*% t(unif.beta.boot -
matrix(rep(beta.mle, S),
nrow = S, byrow = T)))^2,
2, sum))
}
unif2 <- unif.mse
plot(unif1)
lines(unif2)
load("D:/GitHub/sub-sampling/category_subsampling/0_trial/code/category_ss_2levels.RData")
png('D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\plot_2levels.png',
width = 600,height = 600, res = 100)
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 0.4))
dev.off()
ss_mses1$unif.mse
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 5000))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 3000))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 2500))
load("D:/GitHub/sub-sampling/category_subsampling/0_trial/code/category_ss_3level.RData")
compPlot(ss_mses1, ss_mses2, '10/01/01', '10/01/-1-1', ylim = c(0, 3000))
compPlot(ss_mses1, ss_mses2, '10/01/01', '10/01/-1-1', ylim = c(0, 2000))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 0.5
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
ss_mses1 <- ss_core(y, X1)
ss_mses2 <- ss_core(y, X2)
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 2500))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 100))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 60))
et.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
source("D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\code\\functions_ss_plot.R")
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 60))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 100))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 10
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(0.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 0.5
beta_cat1 <- 5
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(1, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 5
beta_cat1 <- 5
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 2
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
library(MASS)
source("D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\code\\functions_ss_plot.R")
#################################
#### 1 categorical variable, 2 levels:
## code 1: 1/ 0
## code 2: 1/ -1
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 2
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 3
nBeta_cont <- nBeta-2
beta_cont <- rep(.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 1
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
set.seed(123)
n <- 1000
nBeta <- 4
nBeta_cont <- nBeta-2
beta_cont <- rep(.5, nBeta_cont)
Sigma_cont <- matrix(0.5, nrow = nBeta_cont, ncol = nBeta_cont)
diag(Sigma_cont) <- 1
mu_cont <- rep(0, nBeta_cont)
X_cont <- mvrnorm(n, mu_cont, Sigma_cont)
## code 1: 1/ 0
beta0_1 <- 1
beta_cat1 <- 2
X1 <- cbind(1, X_cont, c(rep(1, n/2), rep(0, n/2)))
## code 2: 1/ -1
X2 <- cbind(1, X_cont, c(rep(1, n/2), rep(-1, n/2)))
eta <- X1 %*% c(beta0_1, beta_cont, beta_cat1)
p <- exp(eta)/(1 + exp(eta))
y <- rbinom(n, 1, prob = p)
##############################################
#### X1: 1/0 code; X2: 1/-1 code
ss_mses1 <- ss_core(y, X1, r = c(100, 200, 300, 500))
ss_mses2 <- ss_core(y, X2, r = c(100, 200, 300, 500))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 100))
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 200))
load("D:/GitHub/sub-sampling/category_subsampling/0_trial/code/category_ss_3level.RData")
compPlot(ss_mses1, ss_mses2, '10/01/01', '10/01/-1-1', ylim = c(0, 2000))
load("D:/GitHub/sub-sampling/category_subsampling/0_trial/code/category_ss_2levels.RData")
compPlot(ss_mses1, ss_mses2, '1/0', '1/-1', ylim = c(0, 100))
png('D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\plot_2levels.png',
width = 600,height = 600, res = 100)
compPlot(ss_mses1, ss_mses2, '10/01/00', '10/01/-1-1', ylim = c(0,0.08))
dev.off()
load("D:/GitHub/sub-sampling/category_subsampling/0_trial/code/category_ss_2levels_v2.RData")
png('D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\plot_2levels.png',
width = 600,height = 600, res = 100)
compPlot(ss_mses1, ss_mses2, '10/01/00', '10/01/-1-1', ylim = c(0,0.08))
dev.off()
png('D:\\GitHub\\sub-sampling\\category_subsampling\\0_trial\\plot_2levels.png',
width = 600,height = 600, res = 100)
compPlot(ss_mses1, ss_mses2, '10/01/00', '10/01/-1-1', ylim = c(0,0.08))
dev.off()
